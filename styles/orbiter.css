ul.displaycard > li > :nth-last-child(2) {
  position: relative;
  display: block;
  border: 1px solid gray;
}

.ball {
  height: 30px;
  width: 30px;
  clip-path: circle(50%);
  position: absolute;
}

.ball2 {
  height: 30px;
  width: 30px;
  clip-path: circle(50%);
}

.smallball {
  height: 10px;
  width: 10px;
  clip-path: circle(50%);
}
.square {
  height: 30px;
  width: 30px;
  /* position: absolute; */
}

.ring {
  height: 200px;
  width: 200px;
  clip-path: circle(50%);
  position: absolute;
  background-color: rgba(0, 0, 128, 0.3);
  top: calc(50% - 100px);
  left: calc(50% - 100px);
}

.blue {
  background-color: navy;
}

.orange {
  background-color: orange;
}

.green {
  background-color: green;
}

.red {
  background-color: red;
}

.bounce-diagonal {
  animation: 3s bounce infinite ease-in-out;
  animation-delay: -0.75s;
}

.circle-path {
  clip-path: circle(50%);
  position: absolute;
}

.core {
  top: calc(50% - 15px);
  left: calc(50% - 15px);
}

.orbit {
  position: absolute;
}

.simple-rotate {
  --angle: 360deg;

  position: absolute;
  top: calc(50% - 15px - (100px * cos(var(--angle))));
  left: calc(50% - 15px + (100px * sin(var(--angle))));
  animation: 2s rotate infinite ease-in-out;
}

.simple-rotate-no-ease {
  --angle: 360deg;

  position: absolute;
  top: calc(50% - 15px - (100px * cos(var(--angle))));
  left: calc(50% - 15px + (100px * sin(var(--angle))));
  animation: 2s rotate infinite;
}

.simple-rotate-fast {
  --angle: 360deg;

  position: absolute;
  top: calc(50% - 15px - (100px * cos(var(--angle))));
  left: calc(50% - 15px + (100px * sin(var(--angle))));
  animation: 0.36s rotate infinite ease-in-out;
}

@keyframes rotate {
  0% {
    --angle: 0deg;
  }

  10% {
    --angle: 36deg;
  }
  20% {
    --angle: 72deg;
  }
  30% {
    --angle: 108deg;
  }
  40% {
    --angle: 144deg;
  }
  50% {
    --angle: 180deg;
  }
  60% {
    --angle: 216deg;
  }
  70% {
    --angle: 252deg;
  }
  80% {
    --angle: 288deg;
  }
  90% {
    --angle: 324deg;
  }
  100% {
    --angle: 360deg;
  }
}

@keyframes bounce {
  0% {
    top: 10px;
    left: 10px;
  }

  50% {
    top: calc(17rem - 0px);
    left: calc(20rem - 0px);
  }

  100% {
    top: 10px;
    left: 10px;
  }
}

.translator {
  --angle: 360deg;

  position: absolute;
  top: calc(50% - 15px);
  left: calc(50% - 15px);
  animation: 5s translatorbit2 infinite ease;
  animation-timing-function: linear;
}

@keyframes translatorbit {
  0% {
    transform: translate(calc(cos(0deg) * 100px), calc(sin(0deg) * 100px));
  }
  25% {
    transform: translate(calc(cos(90deg) * 100px), calc(sin(90deg) * 100px));
  }
  50% {
    transform: translate(calc(cos(180deg) * 100px), calc(sin(180deg) * 100px));
  }
  75% {
    transform: translate(calc(cos(270deg) * 100px), calc(sin(270deg) * 100px));
  }
  100% {
    transform: translate(calc(cos(360deg) * 100px), calc(sin(360deg) * 100px));
  }
}

@keyframes translatorbit2 {
  0% {
    transform: translate(calc(cos(0deg) * 100px), calc(sin(0deg) * 100px));
  }

  5% {
    transform: translate(calc(cos(18deg) * 100px), calc(sin(18deg) * 100px));
  }

  10% {
    transform: translate(calc(cos(36deg) * 100px), calc(sin(36deg) * 100px));
  }

  15% {
    transform: translate(calc(cos(54deg) * 100px), calc(sin(54deg) * 100px));
  }

  20% {
    transform: translate(calc(cos(72deg) * 100px), calc(sin(72deg) * 100px));
  }

  25% {
    transform: translate(calc(cos(90deg) * 100px), calc(sin(90deg) * 100px));
  }

  30% {
    transform: translate(calc(cos(108deg) * 100px), calc(sin(108deg) * 100px));
  }

  35% {
    transform: translate(calc(cos(126deg) * 100px), calc(sin(126deg) * 100px));
  }

  40% {
    transform: translate(calc(cos(144deg) * 100px), calc(sin(144deg) * 100px));
  }

  45% {
    transform: translate(calc(cos(162deg) * 100px), calc(sin(162deg) * 100px));
  }
  50% {
    transform: translate(calc(cos(180deg) * 100px), calc(sin(180deg) * 100px));
  }
  55% {
    transform: translate(calc(cos(198deg) * 100px), calc(sin(198deg) * 100px));
  }

  60% {
    transform: translate(calc(cos(216deg) * 100px), calc(sin(216deg) * 100px));
  }

  65% {
    transform: translate(calc(cos(234deg) * 100px), calc(sin(234deg) * 100px));
  }

  70% {
    transform: translate(calc(cos(252deg) * 100px), calc(sin(252deg) * 100px));
  }

  75% {
    transform: translate(calc(cos(270deg) * 100px), calc(sin(270deg) * 100px));
  }

  80% {
    transform: translate(calc(cos(288deg) * 100px), calc(sin(288deg) * 100px));
  }

  85% {
    transform: translate(calc(cos(306deg) * 100px), calc(sin(306deg) * 100px));
  }

  90% {
    transform: translate(calc(cos(324deg) * 100px), calc(sin(324deg) * 100px));
  }

  95% {
    transform: translate(calc(cos(342deg) * 100px), calc(sin(342deg) * 100px));
  }

  100% {
    transform: translate(calc(cos(360deg) * 100px), calc(sin(360deg) * 100px));
  }
}

.working-spin {
  /* top: 50px; */
  /* margin-top: calc(50% - 15px); */
  top: calc(50% - 15px);
  left: calc(50% - 115px);
  /* left: 50px; */
  transform-origin: 100px center;
  position: relative;
  animation: thingspin 3s linear infinite;
}

.offset-spin-left {
  top: calc(50% - 5px);
  left: calc(50% - 100px);
  transform-origin: 60px center;
  position: absolute;
  animation: thingspin 2.5s linear infinite;
}

.offset-spin-right {
  top: calc(50% - 5px);
  left: calc(50% + -20px);
  transform-origin: 60px center;
  position: absolute;
  animation: thingspin 3s linear reverse infinite;
}

.offset-spin-up {
  top: calc(50% - 45px);
  left: calc(50% + -60px);
  transform-origin: 60px center;
  position: absolute;
  animation: thingspin 3s linear reverse infinite;
  animation-delay: -0.5s;
}

.offset-spin-down {
  top: calc(50% + 35px);
  left: calc(50% + -60px);
  transform-origin: 60px center;
  position: absolute;
  animation: thingspin 2.75s linear reverse infinite;
  /* animation-delay: -0.5s; */
}

.delay1 {
  animation-delay: -1s;
}

.delay2 {
  animation-delay: -2s;
}

.spin2 {
  /* top: 50px; */
  /* margin-top: calc(50% - 15px); */
  top: calc(50% - 15px);
  left: calc(50% - 100px - 30px);
  /* left: 50px; */
  transform-origin: 130px center;
  position: relative;
  animation: thingspin 3s linear infinite;
}

.spin3 {
  /* top: 50px; */
  /* margin-top: calc(50% - 15px); */
  top: calc(50% - 15px);
  left: calc(50% - 100px - 15px);
  /* left: 50px; */
  transform-origin: 115px center;
  position: relative;
  animation: thingspin 3s linear infinite;
}

@keyframes thingspin {
  100% {
    transform: rotate(-360deg);
  }
}

.spinsquare {
  width: 100px;
  height: 100px;
  top: calc(50%);
  left: calc(50%);
  transform-origin: top left; /* The Pivot! */
  position: relative;
  background-color: limegreen;
  animation: thingspin 3s linear infinite;
}

.orbitlist li {
  list-style-type: none;
  padding: 0;
  display: block;
  position: absolute;
}

.orbit1 li {
  top: calc(50% - 15px);
  left: calc(50% - 100px - 15px);
  transform-origin: 115px center;
  animation: thingspin 3s linear reverse infinite;
}

.orbitlist li:nth-child(2) {
  animation-delay: -1s;
}
.orbitlist li:nth-child(3) {
  animation-delay: -2s;
}

.variable-orbitlist li {
  list-style-type: none;
  padding: 0;
  display: block;
  position: absolute;
}

.variable-orbitlist li:nth-child(1) {
  top: calc(50% - 15px);
  left: calc(50% - 100px - 15px);
  transform-origin: 115px center;
  animation: thingspin 3s linear reverse infinite;
}

.variable-orbitlist li:nth-child(2) {
  top: calc(50% - 15px);
  left: calc(50% - 50px - 15px);
  transform-origin: 65px center;
  animation: thingspin 3s linear reverse infinite;
  animation-delay: -1s;
}
.variable-orbitlist li:nth-child(3) {
  top: calc(50% - 15px);
  left: calc(50% - 60px - 15px);
  transform-origin: 75px center;
  animation: thingspin 3s linear reverse infinite;
  animation-delay: -2s;
}

.variable-orbitlist li:nth-child(4) {
  top: calc(50% - 5px);
  left: calc(50% - 85px - 5px);
  transform-origin: 90px center;
  animation: thingspin 2s linear infinite;
}

.spinrect {
  width: 100px;
  height: 30px;
  top: calc(50% - 15px);
  left: calc(50% - 100px);
  transform-origin: right 50%; /* The Pivot! */
  position: absolute;
  background-color: limegreen;

  animation: thingspin 3s linear infinite;
}
/*
.setofboxes {
  font-family: "Jost", sans-serif;
  color: var(--color-text);
  font-size: 1.15rem;
  line-height: 1.75rem;
  background: linear-gradient(
    70deg,
    var(--background-color),
    var(--background-color-shift)
  );
  padding: 1rem;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.box2 {
  display: block;
  height: 425px;
  width: 425px;
  border: 2px solid black;
  border-radius: 1rem;
  position: relative;
  overflow: hidden;
  margin: 1rem;
  padding: 1rem;
}

.nav {
  display: flex;
  width: 100%;
}

.pagetitle {
  padding: 0.5rem 4rem;
}

.ballback {
  background-color: navy;
  clip-path: circle(50% at 0 0);
  transition: all 400ms ease;
  border: 3px solid pink;
}

.ballback:hover {
  clip-path: circle(100%);
}

.smallbox {
  height: 50px;
  width: 50px;
  position: absolute;
  background-color: gray;
  top: 20px;
  left: 20px;
}

.mote1 {
  height: 6px;
  width: 6px;
  background-color: yellow;
  clip-path: circle(50%);
  position: absolute;
  top: calc(50% - 3px);
  left: calc(50% - 3px);
  text-wrap: wrap;

  animation: 5s bounce infinite ease-in-out; 
}

.ball2 {
  height: 30px;
  width: 30px;

  clip-path: circle(50%);
  position: absolute;

}

.ball3 {
  height: 8px;
  width: 8px;
  clip-path: circle(50%);
  position: absolute;
  background-color: red;
  top: calc(50% - 4px);
  left: calc(50% - 4px);
}

.core {
  background-color: navy;
  top: calc(50% - 15px);
  left: calc(50% - 15px);
}

.orbit {
  background-color: orange;
  position: absolute;
}

.orbit2 {
  background-color: pink;

  top: calc((50% - 15px) - (100px * cos(90deg)));
  left: calc((50% - 15px) + (100px * sin(90deg)));
}

.orbit3 {
  background-color: yellowgreen;

  top: calc((50% - 15px) - (100px * cos(180deg)));
  left: calc((50% - 15px) + (100px * sin(180deg)));
}

/* .orbit3 {
  background-color: pink;

  top: calc(50% - 15px - 100px * cos(60));
  left: calc(50% - 15px + 100px * sin(60));
}
.orbit4 {
  top: calc(50% - 15px - 100px * cos(90));
  left: calc(50% - 15px + 100px * sin(90));
}
.orbit5 {
  top: calc(50% - 15px - 100px * sin(120));
  left: calc(50% - 15px + 100px * cos(120));
}
.orbit6 {
  top: calc(50% - 15px - 100px * sin(150));
  left: calc(50% - 15px + 100px * cos(150));
}

.orbit7 {
  top: calc(50% - 15px - 100px * sin(180));
  left: calc(50% - 15px + 100px * cos(180));
} 



.positor {
  position: absolute;
  background-color: limegreen;

  object-position: 250px 125px;

}

.tracker {
  offset-path: path("M20,20 C20,100 200,0 200,100");
  animation: track 3000ms infinite alternate ease-in-out;

  background: cyan;
}
@keyframes track {
  0% {
    offset-distance: 0%;
  }
  100% {
    offset-distance: 100%;
  }
}
*/
/* What is Transform-origin doing? */
/* OH!  It's setting the center of the rotation OUTSIDE THE SHAPE! */

/* Ok, need to try this with something else */
/*
@keyframes despin {
  100% {
    transform: rotate(-360deg);
  }
}

.thingee {
  width: 100px;
  height: 100px;
  margin-top: 5rem;
  transform-origin: 200% center;
  position: relative;
  animation: thingspin 3s linear infinite;
}
thingee:before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  background: blue;

  animation: thingspin 3s linear reverse infinite;
}

.ball3 {
  height: 8px;
  width: 8px;
  clip-path: circle(50%);
  position: absolute;
  background-color: red;
  top: calc(50% - 4px);
  left: calc(50% - 4px);
}

@keyframes despin {
  100% {
    transform: rotate(-360deg);
  }
}
*/
/* Ok, this works, though it reveals I'm not quite centering thins qhwere I think I am */
/*
.orbit2 li {
  top: calc(50% - 15px);
  left: calc(50% + 100px);
  transform-origin: -107px center;
  animation: thingspin 3s linear reverse infinite;
}



.orbit4 li {
  top: calc(50% - 15px);
  left: calc(50% + 100px);
  transform-origin: -100px 14px;
  animation: thingspin 3s linear reverse infinite;
}

/* .orbit3 li:nth-child(2) {
  transform: rotate(90deg);
}
.orbit3 li:nth-child(3) {
  transform: rotate(180deg);
}
.orbit3 li:nth-child(4) {
  transform: rotate(270deg);
} 


*/
